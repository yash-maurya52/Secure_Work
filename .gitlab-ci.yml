stages:
  - security_scan

variables:
  SEMGREP_RULES: "r/python.sql-injection"
  SEMGREP_SEVERITY: "ERROR"
  SEMGREP_NO_GIT_IGNORE: "true"

semgrep_scan:
  stage: security_scan
  image: python:3.9-alpine
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
  before_script:
    - apk add --no-cache git
    - pip install semgrep
  script:
    - echo "üîç Starting security scan..."
    - semgrep --config="$SEMGREP_RULES" --severity="$SEMGREP_SEVERITY" --sarif --output=semgrep.sarif malicious.py || true
    - test -f semgrep.sarif && echo "‚úÖ Scan completed" || echo "‚ùå Scan failed - no report"
  artifacts:
    when: always
    paths:
      - semgrep.sarif
    reports:
      sast: semgrep.sarif
